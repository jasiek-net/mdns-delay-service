Przydatne funkcje są w pliku mdns_extra.c:

struct RES_RECORD *get_answer(unsigned char *buf);
Przekazujemy funkcji bufor odebrany przez recvfrom (sprawdzamy najpierw czy pakiet mdns zawiera pytania czy odpowiedzi, robimy to rzutując bufor na nagłówek mdns i sprawdzając liczebność pól q_count i ans_ count).
Funkcja zwraca tablicę struktur RES_RECORD ze sparsowanymi polami, trzeba ją na końcu zdezalokować free().

struct QUERY *get_question(char *buf);
Analogicznie, tylko dla zapytań mdns

int create_answer(char *query, int type, char *buf, ssize_t *len);
Tworzy nam jedną odpowiedź na pytanie query, np. na "_opoznienia._udp.local." stworzy odpowiedź "moj-komputer._opoznienia._udp.local." itd. Potem przekonwertuje odpowiedź do formatu pakietów mdns i umieści w parametrze buf, gotową do wysłania (długość wiadomości będzie na zmiennej len)

int create_question(char *name, char *rdata, int type, char *buf, ssize_t *len);
Analogicznie do create_answer tylko przekazujemy i pytanie (name) i odpowiedź (rdata). Funkcja albo tworzy odpowiedź albo (jeśli to odpowiedź na pytanie typu A i dostajemy adres IP) dodaje nowego hosta do listy.

Funkcje create_question i create_answer zwracają 1 gdy stworzą poprawny pakiet mdns, a 0 gdy odebrany pakiet nie dotyczy oferowanych usług (opoznienie i ssh) lub odpowiedź zawiera IP nowego hosta i nie ma potrzeby wysyłać odpowiedzi. Dlatego wygodnie używać tych funkcji tak:

if (create_answer(... buf, &len))
  sendto(..., buf, len, ...);

Przykład zastosowań (serwer i klient mdns) jest w pliku mdns.c